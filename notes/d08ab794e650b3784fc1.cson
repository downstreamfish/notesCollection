createdAt: "2018-04-21T06:18:20.912Z"
updatedAt: "2018-04-26T14:04:48.325Z"
content: '''
  ---
  style: ocean
  ---
  VIM
  ===
  * 插入命令
  	- a 在光标所在字符后插入
  	- A 在光标所在行尾插入
  	- i 在光标所在字符前插入
  	- I 在光标所在行行首插入
  	- o 在光标下插入新行
  	- O 在光标上插入新行
  	- s 
  	- S 清除行内容，行号不变
  * 删除命令
  	- x 删除光标所在处字符
  	- nx 删除光标所在处后n个字符
  	- dd 删除光标所在行，ndd删除n行
  	- dG 删除光标所在行到文件末尾内容
  	- D 删除光标所在处到行尾内容
  	- :n1,n2d 删除指定范围的行
  shift + z + z :保存退出
  
  ***
  ## VIM快速入门
  * 基本模式
  	+    --普通模式
  	+    --插入模式
  	+    --可视模式
  	+    --选择模式
  	+    --命令行模式
  	+    --Ex模式
  
  * 派生模式
  	+    --操作符等待模式
  	+    --插入普通模式
  	+    --插入可视模式
  	+    --插入选择模式
  	+    --替换模式
  
  * 第一节：使用h j k l来移动你的光标
  	+ h   --向左移动
  	+ j   --向下移动
  	+ k   --向上移动
  	+ l   --向右移动
  * 第二节：插入模式和退出VIM的方法
  	+ 进入INSERT模式的各种方法
  		- i   --在光标的前边进入
  		- I   --在光标所在行的行首进入
  		- a   --在光标的后边进入
  		- A   --在光标所在行的行尾进入
  		- o   --在光标所在行的下方插入空行并进入
  		- O   --在光标所在行的上方插入空行并进入
  		- s   --删除光标指定的字符并进入
  		- S   --将光标所在行清除并进入
  	+ 退出VIM的方法
  		1. esc --退出到普通模式
  		2. :q! --忽略修改退出VIM
  		3. :wq 或shift + z + z --保存退出VIM
  * 第三节：删除命令、数字的奥义、撤销和恢复命令
  	+ 在插入模式下，backspace或del
  	+ 回到普通模式
  		1. x 删除单一字符
  		2. d + motion 
  > motion-表示操作范围的指令	
  
  	
  |  按键  |     含义               |
  |  ---  |      ---                |
  | 0     | 将光标定位到行首的位置    |
  | ^     | 同上                     |
  | $     | 将光标定位到行尾的位置         |
  | b     | 将光标定位到光标所在单词的起始处 |
  | e     | 将光标定位到光标所在单词的结尾处 |
  | w     | 将光标定位到下一个单词的起始处   |
  | gg    | 将光标定位到文件的开头            |
  | G     | 将光标定位到文件的末尾           |
  
  
  ![VIM删除命令](VIM%E5%88%A0%E9%99%A4%E5%91%BD%E4%BB%A4.png)
  
  *
  	+ 数字的奥义
  		- 数字 + motion = 重复多个motion
  		- d + 数字 + motion = 删除多个motion范围
  	+ 恢复命令
  		- u --表示撤销最后一次修改
  		- U --表示撤销对整行的修改
  		- Ctrl + r --快捷键可以恢复撤销的内容
  	*VIM的删除操作并不是真的删除，它们事实上是存放在VIM的一个缓冲区中，类似windows的剪贴。*
  * 第四节：粘贴命令、替换命令、替换模式和修改命令
  	+ 粘贴命令
  		- 使用p命令可以将最后一次删除的内容粘贴到光标之后，如果是整行，则从光标的下一行开始粘贴
  		- 大写的P则是粘贴到光标之前,整行则粘贴到光标的上一行
  	+ 复制命令
  		- y [数字]  motion
  	+ 替换命令
  		- r 命令用于替换光标所在的字符，用法是先将光标移动到需要替换的字符处，按一下r键，然后输入新的字符；在键入r前输入数字，表示从光标处开始，将多个字符统一替换为新字符
  	+ 替换模式
  		- R 命令可以进入到替换模式，
  	+修改命令
  		- c 命令实现修改：c [数字] motion
  	
  ![VIM修改命令](VIM%E4%BF%AE%E6%94%B9%E5%91%BD%E4%BB%A4.png)
  
  * 第五节：文件信息、跳转和定位括号
  	+ 文件信息 Ctrl + g
  	+ 跳转：
  		1. 行号 + G  --跳转到行号
  		2. : + 行号  --跳转到行号
  	+ 定位括号：%  --快速定位配对的括号
  	+ 缩进
  		1. [数字] + >>  --表示缩进
  		2. [数字] + <<  --表示反缩进
  * 第六节：搜索命令和替换命令
  	+ 搜索 
  		1. / + 目标 --从光标开始向后，n向后搜寻下一个，N向前搜寻下一个
  		2. ? + 目标 --从光标开始向前，n向前搜寻下一个，N向后搜寻下一个
  		3. :nohl --取消高亮
  		4. 十个特殊字符 .、*、[、]、^、%、/、?、~和$ 无法搜索
  	+ 替换命令
  		- :s/old/new --表示将光标所在行的第一个old替换为new
  		- :s/old/new/g --表示将光标所在行的所有old替换为new
  		- :%s/old/new/g --表示将整个文件中所有的old替换为new
  		- :%s/old/new/gc --同上，但会在每次替换之前先确认
  		- :5,13s/old/new/g --表示将第5行到第13行中所有的old替换为new
  * 第七节：执行shell命令、文件另存为和合并文件
  	+ shell命令
  		- :! + bash命令
  		- :w + 文件名  --文件另存为
  			1. 进入可视模式，选定文本内容
  			2. :w + 文件名--部分文本另存为
  		- :r + 文件名 -- 合并文件
  		- 打开多个文件
  			* 加-o(上下多个) -O(左右多个)参数，全部关闭用:wqa
  			* 用Ctrl + w + w 将光标切换到下一个文件
  			* 对于垂直并排的文件，使用Ctrl + w + ↑、↓，表示上下切换文件
  			* 对于水平并排的文件，使用Ctrl + w + ←、→，表示左右切换文件
  		
  		
  		
  
'''
folder: "bf4ea5f3e7f7f76a59be"
title: "VIM"
type: "MARKDOWN_NOTE"
tags: []
isStarred: false
isTrashed: true
